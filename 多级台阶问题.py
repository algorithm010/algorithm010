# -*- coding:utf-8 -*-
# Author : Ray
# Data : 2020/8/12 11:27 AM

# 小明那题应该是
# dp[i]表示走上第i级台阶有多少种走法
# #0表示走1阶，1表示走两阶，由于连续两次不能重复，
# 所以如果你这次想走1个台阶，只能是你之前从i-2个台阶走两阶；
# 如果你这次想走2个台阶，（你之前只能走1个台阶）只能从i-1个台阶走过来
# dp[0][0] = 0 dp[0][1] = 0
# dp[1][0] = 1 dp[1][1] = 0
# dp[2][0] = 0 dp[2][1] = 1
# 那么现在 如果想走到三级台阶，有几种走法？？？1. 2+1 2.1+2 仅两种
# dp[i][0] = dp[i-2][1] + 1 #dp[2][0] = dp[i-dp[i-1]][1]+1 = 0+1 = 1
# dp[i][1] = dp[i-2][0] + 1# dp[2][1] = dp[0][0]+1 = 0
# dp[3][0]
# dp[i][0,1]表示以走0或1（+1）的方式走上第i级台阶的方法
# 如果想走到n级台阶，有两种走法，走1阶，走两阶
# 1.确定此时走两阶 那么之前只能走一阶 dp[i][1] = dp[i-1][0] + 1
# 2.确定此时只能走一阶 那么此前只能走两阶 dp[i][0] = dp[i-2][1] + 1
# dp[0][0] = 0 dp[0][1] = 0
# dp[1][0] = 1 dp[1][1] = 0
# dp[2][0] = 0 dp[2][1] = 1
# 如果要上三级台阶   1+2 或者2+1
# dp[3][0] = dp[2][1] + 1= 2
# dp[3][1] = dp[1][0] + 1 = 2
# 最后返回max(dp[-1])